stack--> ordered, fixed datasize, "plate stack"
heap--> find space, return pointer --> allocating on the heap --> allocating

pointer to heap is down fixed size to can be store in the stack.

pushing to stack --> faster
allocating to heap --> slower
(hence why immut is standard?) 

owner out of scope --> value dropped

?? primitive datatypes --> fixed size --> stack? 

string literal != String
let s = String::from("hello"); //converts from string literal to String


