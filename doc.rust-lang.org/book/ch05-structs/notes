a struct is like an object’s data attribute in Object Oriented languages.

Note that the entire instance must be mutable; Rust doesn’t allow us to mark only certain fields as mutable. 
  As with any expression, we can construct a new instance of the struct as the last expression in the function body
  to implicitly return that new instance.

Read up more on string literal (&str) vs String

fn first_word(s: &str)    -> &str { // can take but String and &str values
fn first_word(s: String)  -> &str { // can not take &str (?)

